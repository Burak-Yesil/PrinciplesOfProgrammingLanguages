
(* Add exercise 3 *)

let n_left = { data <= 12; left <= 0; right <= 0}    (* 0 in head signals null *)
in let n_right = { data <= 44; left <= 0; right <= 0}
in let n_root = { data <= 33; left <= n_left ; right <= n_right }
in let t1 = { root <= n_root ; size <= 3}

in letrec add_bt_helper (node) = proc (x) { 
  if (x > node.data)
    then if number?(node.right)
      then node.right <= { data <= x; left <= 0; right <= 0 }
      else ((add_bt_helper node.right) x) 
  else if (x < node.data)
    then if number?(node.left)
      then node.left <= { data <= x; left <= 0; right <= 0 }
      else ((add_bt_helper node.left) x)  
  else 0 
}

in let add_bt = proc (t) { proc (x) { ((add_bt_helper t.root) x) }}
in begin
     ((add_bt t1) 23);
     t1.size <= t1.size+1;
     debug(t1)		
   end

